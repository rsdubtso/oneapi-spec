# -*- coding: utf-8 -*-
#
# Configuration file for the Sphinx documentation builder.
#
# This file does only contain a selection of the most common options. For a
# full list see the documentation:
# http://www.sphinx-doc.org/en/master/config

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys
sys.path.insert(0, os.path.abspath('conf'))
import datetime

from common_conf import *

# -- Project information -----------------------------------------------------

project = u'oneAPI Specification'
copyright = u'2020, Intel Corporation'
author = u'Intel'

# The short X.Y version
version = env['oneapi_version']
# The full version, including alpha/beta/rc tags
release = version


# -- General configuration ---------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = [#'404.rst',
                    'elements/oneTBB/source/index.rst',
                    'elements/oneTBB/source/uncategorized.rst',
                    'elements/oneTBB/source/uncategorized/**',
                    'elements/oneTBB/source/low_level_task_api.rst',
                    'elements/oneTBB/source/low_level_tasking/**',
                    '**/*.inc.rst',
]

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = None


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'sphinx_rtd_theme'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
html_theme_options = {
  'includehidden': False
}

html_context = {
    'display_github': True,
    'github_user': 'oneapi-src',
    'github_repo': 'oneapi-spec',
    'github_version': 'master/source/'
}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {}

html_logo = '_static/oneAPI-rgb-rev-100.png'
html_favicon = '_static/favicons.png'
latex_logo = '_static/oneAPI-rgb-3000.png'

# Causing long page loads because it loads utag.js, which times out
html_js_files = ['custom.js']

# -- Options for HTMLHelp output ---------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'oneAPI-spec'


# -- Options for LaTeX output ------------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    'preamble': ('\\DeclareUnicodeCharacter{2208}{$\\in$}'
                 '\\DeclareUnicodeCharacter{222A}{$\\cup$}'
                 '\\DeclareUnicodeCharacter{2236}{$\\colon$}'
                 '\\DeclareUnicodeCharacter{2260}{$\\neq$}'
                 '\\DeclareUnicodeCharacter{2264}{$\\leq$}'
                 '\\DeclareUnicodeCharacter{2265}{$\\geq$}'
                 '\\DeclareUnicodeCharacter{393}{$\\gamma$}'
                 '\\DeclareUnicodeCharacter{39B}{$\\Lambda$}'
                 '\\DeclareUnicodeCharacter{3A3}{$\\Sigma$}'
                 '\\DeclareUnicodeCharacter{3A6}{$\\phi$}'
                 '\\DeclareUnicodeCharacter{3B1}{$\\alpha$}'
                 '\\DeclareUnicodeCharacter{3B2}{$\\beta$}'
                 '\\DeclareUnicodeCharacter{3B4}{$\\delta$}'
                 '\\DeclareUnicodeCharacter{3BB}{$\\lambda$}'
                 '\\DeclareUnicodeCharacter{3BC}{$\\mu$}'
                 '\\DeclareUnicodeCharacter{3BD}{$\\nu$}'
                 '\\DeclareUnicodeCharacter{3C0}{$\\pi$}'
                 '\\DeclareUnicodeCharacter{3C3}{$\\sigma$}'
                 '\\DeclareUnicodeCharacter{FB01}{$fi$}'
                 '\\DeclareUnicodeCharacter{FB02}{$fl$}'
                 '\\newcommand{\\src}{\\operatorname{src}}'
                 '\\newcommand{\\srclayer}{\\operatorname{src\\_layer}}'
                 '\\newcommand{\\srciter}{\\operatorname{src\\_iter}}'
                 '\\newcommand{\\srciterc}{\\operatorname{src\\_iter\\_c}}'
                 '\\newcommand{\\weights}{\\operatorname{weights}}'
                 '\\newcommand{\\weightslayer}{\\operatorname{weights\\_layer}}'
                 '\\newcommand{\\weightsiter}{\\operatorname{weights\\_iter}}'
                 '\\newcommand{\\weightspeephole}{\\operatorname{weights\\_peephole}}'
                 '\\newcommand{\\weightsprojection}{\\operatorname{weights\\_projection}}'
                 '\\newcommand{\\bias}{\\operatorname{bias}}'
                 '\\newcommand{\\dst}{\\operatorname{dst}}'
                 '\\newcommand{\\dstlayer}{\\operatorname{dst\\_layer}}'
                 '\\newcommand{\\dstiter}{\\operatorname{dst\\_iter}}'
                 '\\newcommand{\\dstiterc}{\\operatorname{dst\\_iter\\_c}}'
                 '\\newcommand{\\diffsrc}{\\operatorname{diff\\_src}}'
                 '\\newcommand{\\diffsrclayer}{\\operatorname{diff\\_src\\_layer}}'
                 '\\newcommand{\\diffsrciter}{\\operatorname{diff\\_src\\_iter}}'
                 '\\newcommand{\\diffsrciterc}{\\operatorname{diff\\_src\\_iter\\_c}}'
                 '\\newcommand{\\diffweights}{\\operatorname{diff\\_weights}}'
                 '\\newcommand{\\diffweightslayer}{\\operatorname{diff\\_weights\\_layer}}'
                 '\\newcommand{\\diffweightsiter}{\\operatorname{diff\\_weights\\_iter}}'
                 '\\newcommand{\\diffweightspeephole}{\\operatorname{diff\\_weights\\_peephole}}'
                 '\\newcommand{\\diffweightsprojection}{\\operatorname{diff\\_weights\\_projection}}'
                 '\\newcommand{\\diffbias}{\\operatorname{diff\\_bias}}'
                 '\\newcommand{\\diffdst}{\\operatorname{diff\\_dst}}'
                 '\\newcommand{\\diffdstlayer}{\\operatorname{diff\\_dst\\_layer}}'
                 '\\newcommand{\\diffdstiter}{\\operatorname{diff\\_dst\\_iter}}'
                 '\\newcommand{\\diffdstiterc}{\\operatorname{diff\\_dst\\_iter\\_c}}'
                 '\\newcommand{\\diffgamma}{\\operatorname{diff\\_\\gamma}}'
                 '\\newcommand{\\diffbeta}{\\operatorname{diff\\_\\beta}}'
                 '\\newcommand{\\workspace}{\\operatorname{workspace}}'
    ),

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
    'extraclassoptions': 'openany,oneside'
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'oneAPI-spec.tex', u'oneAPI Specification',
     u'Intel', 'manual'),
]


# -- Options for manual page output ------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'oneAPI-spec', u'oneAPI Specification',
     [author], 1)
]


# -- Options for Texinfo output ----------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'oneAPI-spec', u'oneAPI Specification',
     author, 'Intel', 'Specification for oneAPI software.',
     'Miscellaneous'),
]


# -- Options for Epub output -------------------------------------------------

# Bibliographic Dublin Core info.
epub_title = project

# The unique identifier of the text. This can be a ISBN number
# or the project homepage.
#
# epub_identifier = ''

# A unique identification for the text.
#
# epub_uid = ''

# A list of files that should not be packed into the epub file.
epub_exclude_files = ['search.html']


# -- Extension configuration -------------------------------------------------

# -- Options for intersphinx extension ---------------------------------------

# Example configuration for intersphinx: refer to the Python standard library.
intersphinx_mapping = {'https://docs.python.org/': None}

# -- Options for todo extension ----------------------------------------------

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True

breathe_projects = {
    "oneCCL": "elements/oneCCL/doxygen/xml",
    "oneDNN": "elements/oneDNN/doxygen/xml",
    "oneVPL": "elements/oneVPL/doxygen/xml",
}
breathe_default_project = 'oneAPI'

notfound_default_language = 'versions'

# oneDAL project directory is needed for `dalapi` extension
onedal_project_dir = 'elements/oneDAL'
